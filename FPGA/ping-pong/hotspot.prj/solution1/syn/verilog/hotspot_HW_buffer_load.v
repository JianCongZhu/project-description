// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2.2 (64-bit)
// Version: 2020.2.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module hotspot_HW_buffer_load (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        temp_address0,
        temp_ce0,
        temp_q0,
        load_flag,
        dest_0_address0,
        dest_0_ce0,
        dest_0_we0,
        dest_0_d0,
        dest_1_address0,
        dest_1_ce0,
        dest_1_we0,
        dest_1_d0,
        dest_2_address0,
        dest_2_ce0,
        dest_2_we0,
        dest_2_d0,
        dest_3_address0,
        dest_3_ce0,
        dest_3_we0,
        dest_3_d0,
        dest_4_address0,
        dest_4_ce0,
        dest_4_we0,
        dest_4_d0,
        dest_5_address0,
        dest_5_ce0,
        dest_5_we0,
        dest_5_d0,
        dest_6_address0,
        dest_6_ce0,
        dest_6_we0,
        dest_6_d0,
        dest_7_address0,
        dest_7_ce0,
        dest_7_we0,
        dest_7_d0,
        dest_8_address0,
        dest_8_ce0,
        dest_8_we0,
        dest_8_d0,
        dest_9_address0,
        dest_9_ce0,
        dest_9_we0,
        dest_9_d0,
        dest_10_address0,
        dest_10_ce0,
        dest_10_we0,
        dest_10_d0,
        dest_11_address0,
        dest_11_ce0,
        dest_11_we0,
        dest_11_d0,
        dest_12_address0,
        dest_12_ce0,
        dest_12_we0,
        dest_12_d0,
        dest_13_address0,
        dest_13_ce0,
        dest_13_we0,
        dest_13_d0,
        dest_14_address0,
        dest_14_ce0,
        dest_14_we0,
        dest_14_d0,
        dest_15_address0,
        dest_15_ce0,
        dest_15_we0,
        dest_15_d0,
        source
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state6 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [14:0] temp_address0;
output   temp_ce0;
input  [511:0] temp_q0;
input  [0:0] load_flag;
output  [7:0] dest_0_address0;
output   dest_0_ce0;
output   dest_0_we0;
output  [31:0] dest_0_d0;
output  [7:0] dest_1_address0;
output   dest_1_ce0;
output   dest_1_we0;
output  [31:0] dest_1_d0;
output  [7:0] dest_2_address0;
output   dest_2_ce0;
output   dest_2_we0;
output  [31:0] dest_2_d0;
output  [7:0] dest_3_address0;
output   dest_3_ce0;
output   dest_3_we0;
output  [31:0] dest_3_d0;
output  [7:0] dest_4_address0;
output   dest_4_ce0;
output   dest_4_we0;
output  [31:0] dest_4_d0;
output  [7:0] dest_5_address0;
output   dest_5_ce0;
output   dest_5_we0;
output  [31:0] dest_5_d0;
output  [7:0] dest_6_address0;
output   dest_6_ce0;
output   dest_6_we0;
output  [31:0] dest_6_d0;
output  [7:0] dest_7_address0;
output   dest_7_ce0;
output   dest_7_we0;
output  [31:0] dest_7_d0;
output  [7:0] dest_8_address0;
output   dest_8_ce0;
output   dest_8_we0;
output  [31:0] dest_8_d0;
output  [7:0] dest_9_address0;
output   dest_9_ce0;
output   dest_9_we0;
output  [31:0] dest_9_d0;
output  [7:0] dest_10_address0;
output   dest_10_ce0;
output   dest_10_we0;
output  [31:0] dest_10_d0;
output  [7:0] dest_11_address0;
output   dest_11_ce0;
output   dest_11_we0;
output  [31:0] dest_11_d0;
output  [7:0] dest_12_address0;
output   dest_12_ce0;
output   dest_12_we0;
output  [31:0] dest_12_d0;
output  [7:0] dest_13_address0;
output   dest_13_ce0;
output   dest_13_we0;
output  [31:0] dest_13_d0;
output  [7:0] dest_14_address0;
output   dest_14_ce0;
output   dest_14_we0;
output  [31:0] dest_14_d0;
output  [7:0] dest_15_address0;
output   dest_15_ce0;
output   dest_15_we0;
output  [31:0] dest_15_d0;
input  [20:0] source;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg temp_ce0;
reg dest_0_ce0;
reg dest_0_we0;
reg dest_1_ce0;
reg dest_1_we0;
reg dest_2_ce0;
reg dest_2_we0;
reg dest_3_ce0;
reg dest_3_we0;
reg dest_4_ce0;
reg dest_4_we0;
reg dest_5_ce0;
reg dest_5_we0;
reg dest_6_ce0;
reg dest_6_we0;
reg dest_7_ce0;
reg dest_7_we0;
reg dest_8_ce0;
reg dest_8_we0;
reg dest_9_ce0;
reg dest_9_we0;
reg dest_10_ce0;
reg dest_10_we0;
reg dest_11_ce0;
reg dest_11_we0;
reg dest_12_ce0;
reg dest_12_we0;
reg dest_13_ce0;
reg dest_13_we0;
reg dest_14_ce0;
reg dest_14_we0;
reg dest_15_ce0;
reg dest_15_we0;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [8:0] i_reg_375;
reg   [8:0] i_reg_375_pp0_iter1_reg;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_pp0_stage0_11001;
reg   [8:0] i_reg_375_pp0_iter2_reg;
wire   [0:0] load_flag_read_read_fu_148_p2;
wire   [8:0] i_3_fu_387_p2;
reg   [8:0] i_3_reg_682;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] icmp_ln1842_fu_393_p2;
reg   [0:0] icmp_ln1842_reg_687;
reg   [0:0] icmp_ln1842_reg_687_pp0_iter1_reg;
reg   [0:0] icmp_ln1842_reg_687_pp0_iter2_reg;
wire   [31:0] trunc_ln708_fu_435_p1;
reg   [31:0] trunc_ln708_reg_696;
reg   [31:0] p_Result_1_reg_701;
reg   [31:0] p_Result_2_reg_706;
reg   [31:0] p_Result_3_reg_711;
reg   [31:0] p_Result_4_reg_716;
reg   [31:0] p_Result_5_reg_721;
reg   [31:0] p_Result_6_reg_726;
reg   [31:0] p_Result_7_reg_731;
reg   [31:0] p_Result_8_reg_736;
reg   [31:0] p_Result_9_reg_741;
reg   [31:0] p_Result_s_reg_746;
reg   [31:0] p_Result_10_reg_751;
reg   [31:0] p_Result_11_reg_756;
reg   [31:0] p_Result_12_reg_761;
reg   [31:0] p_Result_13_reg_766;
reg   [31:0] p_Result_14_reg_771;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg   [8:0] ap_phi_mux_i_phi_fu_379_p4;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln1845_1_fu_430_p1;
wire   [63:0] zext_ln1842_fu_589_p1;
wire   [7:0] trunc_ln1845_fu_399_p1;
wire   [13:0] shl_ln_fu_403_p3;
wire   [20:0] zext_ln1845_fu_411_p1;
wire   [20:0] add_ln1845_fu_415_p2;
wire   [14:0] lshr_ln_fu_420_p4;
wire    ap_CS_fsm_state6;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (load_flag_read_read_fu_148_p2 == 1'd1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (load_flag_read_read_fu_148_p2 == 1'd1))) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (load_flag_read_read_fu_148_p2 == 1'd1))) begin
        i_reg_375 <= 9'd0;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1842_reg_687 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_reg_375 <= i_3_reg_682;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_3_reg_682 <= i_3_fu_387_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_reg_375_pp0_iter1_reg <= i_reg_375;
        icmp_ln1842_reg_687 <= icmp_ln1842_fu_393_p2;
        icmp_ln1842_reg_687_pp0_iter1_reg <= icmp_ln1842_reg_687;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        i_reg_375_pp0_iter2_reg <= i_reg_375_pp0_iter1_reg;
        icmp_ln1842_reg_687_pp0_iter2_reg <= icmp_ln1842_reg_687_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1842_reg_687_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Result_10_reg_751 <= {{temp_q0[383:352]}};
        p_Result_11_reg_756 <= {{temp_q0[415:384]}};
        p_Result_12_reg_761 <= {{temp_q0[447:416]}};
        p_Result_13_reg_766 <= {{temp_q0[479:448]}};
        p_Result_14_reg_771 <= {{temp_q0[511:480]}};
        p_Result_1_reg_701 <= {{temp_q0[63:32]}};
        p_Result_2_reg_706 <= {{temp_q0[95:64]}};
        p_Result_3_reg_711 <= {{temp_q0[127:96]}};
        p_Result_4_reg_716 <= {{temp_q0[159:128]}};
        p_Result_5_reg_721 <= {{temp_q0[191:160]}};
        p_Result_6_reg_726 <= {{temp_q0[223:192]}};
        p_Result_7_reg_731 <= {{temp_q0[255:224]}};
        p_Result_8_reg_736 <= {{temp_q0[287:256]}};
        p_Result_9_reg_741 <= {{temp_q0[319:288]}};
        p_Result_s_reg_746 <= {{temp_q0[351:320]}};
        trunc_ln708_reg_696 <= trunc_ln708_fu_435_p1;
    end
end

always @ (*) begin
    if ((icmp_ln1842_fu_393_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1842_reg_687 == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_i_phi_fu_379_p4 = i_3_reg_682;
    end else begin
        ap_phi_mux_i_phi_fu_379_p4 = i_reg_375;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dest_0_ce0 = 1'b1;
    end else begin
        dest_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln1842_reg_687_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dest_0_we0 = 1'b1;
    end else begin
        dest_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dest_10_ce0 = 1'b1;
    end else begin
        dest_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln1842_reg_687_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dest_10_we0 = 1'b1;
    end else begin
        dest_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dest_11_ce0 = 1'b1;
    end else begin
        dest_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln1842_reg_687_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dest_11_we0 = 1'b1;
    end else begin
        dest_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dest_12_ce0 = 1'b1;
    end else begin
        dest_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln1842_reg_687_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dest_12_we0 = 1'b1;
    end else begin
        dest_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dest_13_ce0 = 1'b1;
    end else begin
        dest_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln1842_reg_687_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dest_13_we0 = 1'b1;
    end else begin
        dest_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dest_14_ce0 = 1'b1;
    end else begin
        dest_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln1842_reg_687_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dest_14_we0 = 1'b1;
    end else begin
        dest_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dest_15_ce0 = 1'b1;
    end else begin
        dest_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln1842_reg_687_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dest_15_we0 = 1'b1;
    end else begin
        dest_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dest_1_ce0 = 1'b1;
    end else begin
        dest_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln1842_reg_687_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dest_1_we0 = 1'b1;
    end else begin
        dest_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dest_2_ce0 = 1'b1;
    end else begin
        dest_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln1842_reg_687_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dest_2_we0 = 1'b1;
    end else begin
        dest_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dest_3_ce0 = 1'b1;
    end else begin
        dest_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln1842_reg_687_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dest_3_we0 = 1'b1;
    end else begin
        dest_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dest_4_ce0 = 1'b1;
    end else begin
        dest_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln1842_reg_687_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dest_4_we0 = 1'b1;
    end else begin
        dest_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dest_5_ce0 = 1'b1;
    end else begin
        dest_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln1842_reg_687_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dest_5_we0 = 1'b1;
    end else begin
        dest_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dest_6_ce0 = 1'b1;
    end else begin
        dest_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln1842_reg_687_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dest_6_we0 = 1'b1;
    end else begin
        dest_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dest_7_ce0 = 1'b1;
    end else begin
        dest_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln1842_reg_687_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dest_7_we0 = 1'b1;
    end else begin
        dest_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dest_8_ce0 = 1'b1;
    end else begin
        dest_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln1842_reg_687_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dest_8_we0 = 1'b1;
    end else begin
        dest_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dest_9_ce0 = 1'b1;
    end else begin
        dest_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln1842_reg_687_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dest_9_we0 = 1'b1;
    end else begin
        dest_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        temp_ce0 = 1'b1;
    end else begin
        temp_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (load_flag_read_read_fu_148_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (load_flag_read_read_fu_148_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln1842_fu_393_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)) & ~((ap_enable_reg_pp0_iter3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)) | ((ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln1842_fu_393_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1845_fu_415_p2 = (zext_ln1845_fu_411_p1 + source);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign dest_0_address0 = zext_ln1842_fu_589_p1;

assign dest_0_d0 = trunc_ln708_reg_696;

assign dest_10_address0 = zext_ln1842_fu_589_p1;

assign dest_10_d0 = p_Result_s_reg_746;

assign dest_11_address0 = zext_ln1842_fu_589_p1;

assign dest_11_d0 = p_Result_10_reg_751;

assign dest_12_address0 = zext_ln1842_fu_589_p1;

assign dest_12_d0 = p_Result_11_reg_756;

assign dest_13_address0 = zext_ln1842_fu_589_p1;

assign dest_13_d0 = p_Result_12_reg_761;

assign dest_14_address0 = zext_ln1842_fu_589_p1;

assign dest_14_d0 = p_Result_13_reg_766;

assign dest_15_address0 = zext_ln1842_fu_589_p1;

assign dest_15_d0 = p_Result_14_reg_771;

assign dest_1_address0 = zext_ln1842_fu_589_p1;

assign dest_1_d0 = p_Result_1_reg_701;

assign dest_2_address0 = zext_ln1842_fu_589_p1;

assign dest_2_d0 = p_Result_2_reg_706;

assign dest_3_address0 = zext_ln1842_fu_589_p1;

assign dest_3_d0 = p_Result_3_reg_711;

assign dest_4_address0 = zext_ln1842_fu_589_p1;

assign dest_4_d0 = p_Result_4_reg_716;

assign dest_5_address0 = zext_ln1842_fu_589_p1;

assign dest_5_d0 = p_Result_5_reg_721;

assign dest_6_address0 = zext_ln1842_fu_589_p1;

assign dest_6_d0 = p_Result_6_reg_726;

assign dest_7_address0 = zext_ln1842_fu_589_p1;

assign dest_7_d0 = p_Result_7_reg_731;

assign dest_8_address0 = zext_ln1842_fu_589_p1;

assign dest_8_d0 = p_Result_8_reg_736;

assign dest_9_address0 = zext_ln1842_fu_589_p1;

assign dest_9_d0 = p_Result_9_reg_741;

assign i_3_fu_387_p2 = (ap_phi_mux_i_phi_fu_379_p4 + 9'd1);

assign icmp_ln1842_fu_393_p2 = ((ap_phi_mux_i_phi_fu_379_p4 == 9'd256) ? 1'b1 : 1'b0);

assign load_flag_read_read_fu_148_p2 = load_flag;

assign lshr_ln_fu_420_p4 = {{add_ln1845_fu_415_p2[20:6]}};

assign shl_ln_fu_403_p3 = {{trunc_ln1845_fu_399_p1}, {6'd0}};

assign temp_address0 = zext_ln1845_1_fu_430_p1;

assign trunc_ln1845_fu_399_p1 = ap_phi_mux_i_phi_fu_379_p4[7:0];

assign trunc_ln708_fu_435_p1 = temp_q0[31:0];

assign zext_ln1842_fu_589_p1 = i_reg_375_pp0_iter2_reg;

assign zext_ln1845_1_fu_430_p1 = lshr_ln_fu_420_p4;

assign zext_ln1845_fu_411_p1 = shl_ln_fu_403_p3;

endmodule //hotspot_HW_buffer_load
