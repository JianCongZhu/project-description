// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2.2 (64-bit)
// Version: 2020.2.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module hotspot_HW_compute (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        result_buf_address0,
        result_buf_ce0,
        result_buf_we0,
        result_buf_d0,
        center_buf_address0,
        center_buf_ce0,
        center_buf_q0,
        center_buf_address1,
        center_buf_ce1,
        center_buf_q1,
        top_buf_address0,
        top_buf_ce0,
        top_buf_q0,
        bottom_buf_address0,
        bottom_buf_ce0,
        bottom_buf_q0,
        power_buf_address0,
        power_buf_ce0,
        power_buf_q0,
        cc,
        cn,
        cs,
        ce_r,
        cw,
        ct,
        cb,
        Cap,
        dt,
        amb_temp
);

parameter    ap_ST_fsm_state1 = 16'd1;
parameter    ap_ST_fsm_state2 = 16'd2;
parameter    ap_ST_fsm_state3 = 16'd4;
parameter    ap_ST_fsm_state4 = 16'd8;
parameter    ap_ST_fsm_state5 = 16'd16;
parameter    ap_ST_fsm_state6 = 16'd32;
parameter    ap_ST_fsm_state7 = 16'd64;
parameter    ap_ST_fsm_state8 = 16'd128;
parameter    ap_ST_fsm_state9 = 16'd256;
parameter    ap_ST_fsm_state10 = 16'd512;
parameter    ap_ST_fsm_state11 = 16'd1024;
parameter    ap_ST_fsm_state12 = 16'd2048;
parameter    ap_ST_fsm_pp0_stage0 = 16'd4096;
parameter    ap_ST_fsm_pp0_stage1 = 16'd8192;
parameter    ap_ST_fsm_pp0_stage2 = 16'd16384;
parameter    ap_ST_fsm_state78 = 16'd32768;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [11:0] result_buf_address0;
output   result_buf_ce0;
output   result_buf_we0;
output  [31:0] result_buf_d0;
output  [11:0] center_buf_address0;
output   center_buf_ce0;
input  [31:0] center_buf_q0;
output  [11:0] center_buf_address1;
output   center_buf_ce1;
input  [31:0] center_buf_q1;
output  [11:0] top_buf_address0;
output   top_buf_ce0;
input  [31:0] top_buf_q0;
output  [11:0] bottom_buf_address0;
output   bottom_buf_ce0;
input  [31:0] bottom_buf_q0;
output  [11:0] power_buf_address0;
output   power_buf_ce0;
input  [31:0] power_buf_q0;
input  [31:0] cc;
input  [31:0] cn;
input  [31:0] cs;
input  [31:0] ce_r;
input  [31:0] cw;
input  [31:0] ct;
input  [31:0] cb;
input  [31:0] Cap;
input  [31:0] dt;
input  [31:0] amb_temp;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg result_buf_ce0;
reg result_buf_we0;
reg[11:0] center_buf_address0;
reg center_buf_ce0;
reg[11:0] center_buf_address1;
reg center_buf_ce1;
reg top_buf_ce0;
reg bottom_buf_ce0;
reg power_buf_ce0;

(* fsm_encoding = "none" *) reg   [15:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [12:0] indvar_flatten_reg_241;
reg   [6:0] y_reg_252;
reg   [6:0] x_reg_263;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state12;
wire   [31:0] grp_fu_300_p2;
reg   [31:0] div_reg_556;
wire   [31:0] grp_fu_286_p2;
reg   [31:0] mul_reg_561;
wire   [12:0] add_ln28_fu_306_p2;
reg   [12:0] add_ln28_reg_566;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state13_pp0_stage0_iter0;
wire    ap_block_state16_pp0_stage0_iter1;
wire    ap_block_state19_pp0_stage0_iter2;
wire    ap_block_state22_pp0_stage0_iter3;
wire    ap_block_state25_pp0_stage0_iter4;
wire    ap_block_state28_pp0_stage0_iter5;
wire    ap_block_state31_pp0_stage0_iter6;
wire    ap_block_state34_pp0_stage0_iter7;
wire    ap_block_state37_pp0_stage0_iter8;
wire    ap_block_state40_pp0_stage0_iter9;
wire    ap_block_state43_pp0_stage0_iter10;
wire    ap_block_state46_pp0_stage0_iter11;
wire    ap_block_state49_pp0_stage0_iter12;
wire    ap_block_state52_pp0_stage0_iter13;
wire    ap_block_state55_pp0_stage0_iter14;
wire    ap_block_state58_pp0_stage0_iter15;
wire    ap_block_state61_pp0_stage0_iter16;
wire    ap_block_state64_pp0_stage0_iter17;
wire    ap_block_state67_pp0_stage0_iter18;
wire    ap_block_state70_pp0_stage0_iter19;
wire    ap_block_state73_pp0_stage0_iter20;
wire    ap_block_state76_pp0_stage0_iter21;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln28_fu_312_p2;
reg   [0:0] icmp_ln28_reg_571;
reg   [0:0] icmp_ln28_reg_571_pp0_iter1_reg;
reg   [0:0] icmp_ln28_reg_571_pp0_iter2_reg;
reg   [0:0] icmp_ln28_reg_571_pp0_iter3_reg;
reg   [0:0] icmp_ln28_reg_571_pp0_iter4_reg;
reg   [0:0] icmp_ln28_reg_571_pp0_iter5_reg;
reg   [0:0] icmp_ln28_reg_571_pp0_iter6_reg;
reg   [0:0] icmp_ln28_reg_571_pp0_iter7_reg;
reg   [0:0] icmp_ln28_reg_571_pp0_iter8_reg;
reg   [0:0] icmp_ln28_reg_571_pp0_iter9_reg;
reg   [0:0] icmp_ln28_reg_571_pp0_iter10_reg;
reg   [0:0] icmp_ln28_reg_571_pp0_iter11_reg;
reg   [0:0] icmp_ln28_reg_571_pp0_iter12_reg;
reg   [0:0] icmp_ln28_reg_571_pp0_iter13_reg;
reg   [0:0] icmp_ln28_reg_571_pp0_iter14_reg;
reg   [0:0] icmp_ln28_reg_571_pp0_iter15_reg;
reg   [0:0] icmp_ln28_reg_571_pp0_iter16_reg;
reg   [0:0] icmp_ln28_reg_571_pp0_iter17_reg;
reg   [0:0] icmp_ln28_reg_571_pp0_iter18_reg;
reg   [0:0] icmp_ln28_reg_571_pp0_iter19_reg;
reg   [0:0] icmp_ln28_reg_571_pp0_iter20_reg;
reg   [0:0] icmp_ln28_reg_571_pp0_iter21_reg;
wire   [0:0] icmp_ln29_fu_318_p2;
reg   [0:0] icmp_ln29_reg_575;
wire   [6:0] select_ln28_fu_324_p3;
reg   [6:0] select_ln28_reg_581;
wire   [6:0] add_ln28_1_fu_332_p2;
reg   [6:0] add_ln28_1_reg_589;
wire   [6:0] select_ln28_1_fu_338_p3;
reg   [6:0] select_ln28_1_reg_595;
wire   [5:0] trunc_ln28_fu_346_p1;
reg   [5:0] trunc_ln28_reg_600;
wire   [0:0] cmp66_fu_350_p2;
reg   [0:0] cmp66_reg_606;
wire   [0:0] cmp95_fu_356_p2;
reg   [0:0] cmp95_reg_611;
wire   [5:0] trunc_ln32_fu_362_p1;
reg   [5:0] trunc_ln32_reg_616;
wire   [63:0] zext_ln32_fu_404_p1;
reg   [63:0] zext_ln32_reg_621;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state14_pp0_stage1_iter0;
wire    ap_block_state17_pp0_stage1_iter1;
wire    ap_block_state20_pp0_stage1_iter2;
wire    ap_block_state23_pp0_stage1_iter3;
wire    ap_block_state26_pp0_stage1_iter4;
wire    ap_block_state29_pp0_stage1_iter5;
wire    ap_block_state32_pp0_stage1_iter6;
wire    ap_block_state35_pp0_stage1_iter7;
wire    ap_block_state38_pp0_stage1_iter8;
wire    ap_block_state41_pp0_stage1_iter9;
wire    ap_block_state44_pp0_stage1_iter10;
wire    ap_block_state47_pp0_stage1_iter11;
wire    ap_block_state50_pp0_stage1_iter12;
wire    ap_block_state53_pp0_stage1_iter13;
wire    ap_block_state56_pp0_stage1_iter14;
wire    ap_block_state59_pp0_stage1_iter15;
wire    ap_block_state62_pp0_stage1_iter16;
wire    ap_block_state65_pp0_stage1_iter17;
wire    ap_block_state68_pp0_stage1_iter18;
wire    ap_block_state71_pp0_stage1_iter19;
wire    ap_block_state74_pp0_stage1_iter20;
wire    ap_block_state77_pp0_stage1_iter21;
wire    ap_block_pp0_stage1_11001;
reg   [63:0] zext_ln32_reg_621_pp0_iter1_reg;
reg   [63:0] zext_ln32_reg_621_pp0_iter2_reg;
reg   [63:0] zext_ln32_reg_621_pp0_iter3_reg;
reg   [63:0] zext_ln32_reg_621_pp0_iter4_reg;
reg   [63:0] zext_ln32_reg_621_pp0_iter5_reg;
reg   [63:0] zext_ln32_reg_621_pp0_iter6_reg;
reg   [63:0] zext_ln32_reg_621_pp0_iter7_reg;
reg   [63:0] zext_ln32_reg_621_pp0_iter8_reg;
reg   [63:0] zext_ln32_reg_621_pp0_iter9_reg;
reg   [63:0] zext_ln32_reg_621_pp0_iter10_reg;
reg   [63:0] zext_ln32_reg_621_pp0_iter11_reg;
reg   [63:0] zext_ln32_reg_621_pp0_iter12_reg;
reg   [63:0] zext_ln32_reg_621_pp0_iter13_reg;
reg   [63:0] zext_ln32_reg_621_pp0_iter14_reg;
reg   [63:0] zext_ln32_reg_621_pp0_iter15_reg;
reg   [63:0] zext_ln32_reg_621_pp0_iter16_reg;
reg   [63:0] zext_ln32_reg_621_pp0_iter17_reg;
reg   [63:0] zext_ln32_reg_621_pp0_iter18_reg;
reg   [63:0] zext_ln32_reg_621_pp0_iter19_reg;
reg   [63:0] zext_ln32_reg_621_pp0_iter20_reg;
wire   [11:0] w_fu_429_p3;
reg   [11:0] w_reg_626;
wire   [11:0] e_fu_448_p3;
reg   [11:0] e_reg_631;
wire   [11:0] n_fu_462_p3;
reg   [11:0] n_reg_636;
wire   [11:0] s_fu_476_p3;
reg   [11:0] s_reg_641;
reg   [31:0] center_buf_load_reg_666;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state15_pp0_stage2_iter0;
wire    ap_block_state18_pp0_stage2_iter1;
wire    ap_block_state21_pp0_stage2_iter2;
wire    ap_block_state24_pp0_stage2_iter3;
wire    ap_block_state27_pp0_stage2_iter4;
wire    ap_block_state30_pp0_stage2_iter5;
wire    ap_block_state33_pp0_stage2_iter6;
wire    ap_block_state36_pp0_stage2_iter7;
wire    ap_block_state39_pp0_stage2_iter8;
wire    ap_block_state42_pp0_stage2_iter9;
wire    ap_block_state45_pp0_stage2_iter10;
wire    ap_block_state48_pp0_stage2_iter11;
wire    ap_block_state51_pp0_stage2_iter12;
wire    ap_block_state54_pp0_stage2_iter13;
wire    ap_block_state57_pp0_stage2_iter14;
wire    ap_block_state60_pp0_stage2_iter15;
wire    ap_block_state63_pp0_stage2_iter16;
wire    ap_block_state66_pp0_stage2_iter17;
wire    ap_block_state69_pp0_stage2_iter18;
wire    ap_block_state72_pp0_stage2_iter19;
wire    ap_block_state75_pp0_stage2_iter20;
wire    ap_block_pp0_stage2_11001;
reg   [31:0] top_buf_load_reg_681;
reg   [31:0] bottom_buf_load_reg_686;
reg   [31:0] power_buf_load_reg_691;
wire   [6:0] x_1_fu_492_p2;
reg   [6:0] x_1_reg_696;
reg   [31:0] center_buf_load_1_reg_701;
reg    ap_enable_reg_pp0_iter1;
reg   [31:0] center_buf_load_2_reg_706;
reg   [31:0] center_buf_load_3_reg_721;
reg   [31:0] center_buf_load_4_reg_726;
reg   [31:0] mul1_reg_731;
reg    ap_enable_reg_pp0_iter2;
wire   [31:0] grp_fu_292_p2;
reg   [31:0] mul6_reg_736;
reg   [31:0] mul6_reg_736_pp0_iter3_reg;
reg   [31:0] mul6_reg_736_pp0_iter4_reg;
reg   [31:0] mul6_reg_736_pp0_iter5_reg;
reg   [31:0] mul6_reg_736_pp0_iter6_reg;
reg   [31:0] mul6_reg_736_pp0_iter7_reg;
reg   [31:0] mul6_reg_736_pp0_iter8_reg;
reg   [31:0] mul6_reg_736_pp0_iter9_reg;
reg   [31:0] mul6_reg_736_pp0_iter10_reg;
reg   [31:0] mul6_reg_736_pp0_iter11_reg;
wire   [31:0] grp_fu_296_p2;
reg   [31:0] mul7_reg_741;
reg   [31:0] mul7_reg_741_pp0_iter3_reg;
reg   [31:0] mul7_reg_741_pp0_iter4_reg;
reg   [31:0] mul7_reg_741_pp0_iter5_reg;
reg   [31:0] mul7_reg_741_pp0_iter6_reg;
reg   [31:0] mul7_reg_741_pp0_iter7_reg;
reg   [31:0] mul7_reg_741_pp0_iter8_reg;
reg   [31:0] mul7_reg_741_pp0_iter9_reg;
reg   [31:0] mul7_reg_741_pp0_iter10_reg;
reg   [31:0] mul7_reg_741_pp0_iter11_reg;
reg   [31:0] mul7_reg_741_pp0_iter12_reg;
reg   [31:0] mul7_reg_741_pp0_iter13_reg;
reg   [31:0] mul7_reg_741_pp0_iter14_reg;
reg   [31:0] mul2_reg_746;
reg   [31:0] mul3_reg_751;
reg   [31:0] mul3_reg_751_pp0_iter3_reg;
reg   [31:0] mul3_reg_751_pp0_iter4_reg;
reg   [31:0] mul8_reg_756;
reg   [31:0] mul8_reg_756_pp0_iter3_reg;
reg   [31:0] mul8_reg_756_pp0_iter4_reg;
reg   [31:0] mul8_reg_756_pp0_iter5_reg;
reg   [31:0] mul8_reg_756_pp0_iter6_reg;
reg   [31:0] mul8_reg_756_pp0_iter7_reg;
reg   [31:0] mul8_reg_756_pp0_iter8_reg;
reg   [31:0] mul8_reg_756_pp0_iter9_reg;
reg   [31:0] mul8_reg_756_pp0_iter10_reg;
reg   [31:0] mul8_reg_756_pp0_iter11_reg;
reg   [31:0] mul8_reg_756_pp0_iter12_reg;
reg   [31:0] mul8_reg_756_pp0_iter13_reg;
reg   [31:0] mul8_reg_756_pp0_iter14_reg;
reg   [31:0] mul8_reg_756_pp0_iter15_reg;
reg   [31:0] mul8_reg_756_pp0_iter16_reg;
reg   [31:0] mul4_reg_761;
reg   [31:0] mul4_reg_761_pp0_iter3_reg;
reg   [31:0] mul4_reg_761_pp0_iter4_reg;
reg   [31:0] mul4_reg_761_pp0_iter5_reg;
reg   [31:0] mul4_reg_761_pp0_iter6_reg;
reg   [31:0] mul5_reg_766;
reg   [31:0] mul5_reg_766_pp0_iter3_reg;
reg   [31:0] mul5_reg_766_pp0_iter4_reg;
reg   [31:0] mul5_reg_766_pp0_iter5_reg;
reg   [31:0] mul5_reg_766_pp0_iter6_reg;
reg   [31:0] mul5_reg_766_pp0_iter7_reg;
reg   [31:0] mul5_reg_766_pp0_iter8_reg;
wire   [31:0] grp_fu_274_p2;
reg   [31:0] add_reg_771;
reg    ap_enable_reg_pp0_iter4;
reg   [31:0] add1_reg_776;
reg    ap_enable_reg_pp0_iter7;
reg   [31:0] add2_reg_781;
reg    ap_enable_reg_pp0_iter9;
wire   [31:0] grp_fu_278_p2;
reg   [31:0] add3_reg_786;
reg    ap_enable_reg_pp0_iter11;
reg   [31:0] add4_reg_791;
reg    ap_enable_reg_pp0_iter14;
reg   [31:0] add5_reg_796;
reg    ap_enable_reg_pp0_iter16;
wire   [31:0] grp_fu_282_p2;
reg   [31:0] add6_reg_801;
reg    ap_enable_reg_pp0_iter18;
reg   [31:0] add7_reg_806;
reg    ap_enable_reg_pp0_iter21;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state13;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage1_subdone;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg   [12:0] ap_phi_mux_indvar_flatten_phi_fu_245_p4;
wire    ap_block_pp0_stage0;
reg   [6:0] ap_phi_mux_y_phi_fu_256_p4;
reg   [6:0] ap_phi_mux_x_phi_fu_267_p4;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln41_2_fu_484_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln41_fu_488_p1;
wire   [63:0] zext_ln41_1_fu_497_p1;
wire   [63:0] zext_ln41_3_fu_501_p1;
reg   [31:0] grp_fu_274_p0;
reg   [31:0] grp_fu_274_p1;
reg   [31:0] grp_fu_278_p0;
reg   [31:0] grp_fu_278_p1;
reg   [31:0] grp_fu_282_p0;
reg   [31:0] grp_fu_282_p1;
reg   [31:0] grp_fu_286_p0;
reg   [31:0] grp_fu_286_p1;
reg   [31:0] grp_fu_292_p0;
reg   [31:0] grp_fu_292_p1;
reg   [31:0] grp_fu_296_p0;
reg   [31:0] grp_fu_296_p1;
wire   [0:0] cmp6_mid1_fu_373_p2;
wire   [0:0] cmp9_mid1_fu_384_p2;
wire   [11:0] x_01_cast_fu_395_p1;
wire   [11:0] p_mid2_fu_366_p3;
wire   [11:0] c_fu_398_p2;
wire   [0:0] icmp_ln34_fu_412_p2;
wire   [11:0] add_ln34_1_fu_423_p3;
wire   [11:0] add_ln34_fu_417_p2;
wire   [0:0] icmp_ln35_fu_437_p2;
wire   [11:0] add_ln35_fu_442_p2;
wire   [0:0] select_ln28_2_fu_378_p3;
wire   [11:0] add_ln36_fu_456_p2;
wire   [0:0] select_ln28_3_fu_389_p3;
wire   [11:0] add_ln37_fu_470_p2;
wire    ap_CS_fsm_state78;
reg   [15:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 16'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
end

hotspot_HW_fadd_32ns_32ns_32_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_7_full_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_274_p0),
    .din1(grp_fu_274_p1),
    .ce(1'b1),
    .dout(grp_fu_274_p2)
);

hotspot_HW_fadd_32ns_32ns_32_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_7_full_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_278_p0),
    .din1(grp_fu_278_p1),
    .ce(1'b1),
    .dout(grp_fu_278_p2)
);

hotspot_HW_fadd_32ns_32ns_32_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_7_full_dsp_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_282_p0),
    .din1(grp_fu_282_p1),
    .ce(1'b1),
    .dout(grp_fu_282_p2)
);

hotspot_HW_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_286_p0),
    .din1(grp_fu_286_p1),
    .ce(1'b1),
    .dout(grp_fu_286_p2)
);

hotspot_HW_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_292_p0),
    .din1(grp_fu_292_p1),
    .ce(1'b1),
    .dout(grp_fu_292_p2)
);

hotspot_HW_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_296_p0),
    .din1(grp_fu_296_p1),
    .ce(1'b1),
    .dout(grp_fu_296_p2)
);

hotspot_HW_fdiv_32ns_32ns_32_12_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 12 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fdiv_32ns_32ns_32_12_no_dsp_1_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(dt),
    .din1(Cap),
    .ce(1'b1),
    .dout(grp_fu_300_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state13) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state12)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((((ap_enable_reg_pp0_iter20 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone)))) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end else if ((1'b1 == ap_CS_fsm_state12)) begin
            ap_enable_reg_pp0_iter21 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln28_reg_571 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten_reg_241 <= add_ln28_reg_566;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        indvar_flatten_reg_241 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln28_reg_571 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        x_reg_263 <= x_1_reg_696;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        x_reg_263 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln28_reg_571 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        y_reg_252 <= select_ln28_1_reg_595;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        y_reg_252 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln28_reg_571_pp0_iter6_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add1_reg_776 <= grp_fu_274_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln28_reg_571_pp0_iter9_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add2_reg_781 <= grp_fu_274_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln28_reg_571_pp0_iter11_reg == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        add3_reg_786 <= grp_fu_278_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln28_reg_571_pp0_iter13_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add4_reg_791 <= grp_fu_278_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln28_reg_571_pp0_iter16_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add5_reg_796 <= grp_fu_278_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln28_reg_571_pp0_iter18_reg == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        add6_reg_801 <= grp_fu_282_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln28_reg_571_pp0_iter20_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add7_reg_806 <= grp_fu_282_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln28_fu_312_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln28_1_reg_589 <= add_ln28_1_fu_332_p2;
        cmp66_reg_606 <= cmp66_fu_350_p2;
        cmp95_reg_611 <= cmp95_fu_356_p2;
        icmp_ln29_reg_575 <= icmp_ln29_fu_318_p2;
        select_ln28_reg_581 <= select_ln28_fu_324_p3;
        trunc_ln28_reg_600 <= trunc_ln28_fu_346_p1;
        trunc_ln32_reg_616 <= trunc_ln32_fu_362_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        add_ln28_reg_566 <= add_ln28_fu_306_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln28_reg_571_pp0_iter4_reg == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        add_reg_771 <= grp_fu_274_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln28_reg_571 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        bottom_buf_load_reg_686 <= bottom_buf_q0;
        power_buf_load_reg_691 <= power_buf_q0;
        top_buf_load_reg_681 <= top_buf_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln28_reg_571 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        center_buf_load_1_reg_701 <= center_buf_q0;
        center_buf_load_2_reg_706 <= center_buf_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln28_reg_571_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        center_buf_load_3_reg_721 <= center_buf_q1;
        center_buf_load_4_reg_726 <= center_buf_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln28_reg_571 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        center_buf_load_reg_666 <= center_buf_q0;
        x_1_reg_696 <= x_1_fu_492_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        div_reg_556 <= grp_fu_300_p2;
        mul_reg_561 <= grp_fu_286_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln28_reg_571 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        e_reg_631 <= e_fu_448_p3;
        n_reg_636 <= n_fu_462_p3;
        s_reg_641 <= s_fu_476_p3;
        w_reg_626 <= w_fu_429_p3;
        zext_ln32_reg_621[11 : 0] <= zext_ln32_fu_404_p1[11 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln28_reg_571 <= icmp_ln28_fu_312_p2;
        icmp_ln28_reg_571_pp0_iter10_reg <= icmp_ln28_reg_571_pp0_iter9_reg;
        icmp_ln28_reg_571_pp0_iter11_reg <= icmp_ln28_reg_571_pp0_iter10_reg;
        icmp_ln28_reg_571_pp0_iter12_reg <= icmp_ln28_reg_571_pp0_iter11_reg;
        icmp_ln28_reg_571_pp0_iter13_reg <= icmp_ln28_reg_571_pp0_iter12_reg;
        icmp_ln28_reg_571_pp0_iter14_reg <= icmp_ln28_reg_571_pp0_iter13_reg;
        icmp_ln28_reg_571_pp0_iter15_reg <= icmp_ln28_reg_571_pp0_iter14_reg;
        icmp_ln28_reg_571_pp0_iter16_reg <= icmp_ln28_reg_571_pp0_iter15_reg;
        icmp_ln28_reg_571_pp0_iter17_reg <= icmp_ln28_reg_571_pp0_iter16_reg;
        icmp_ln28_reg_571_pp0_iter18_reg <= icmp_ln28_reg_571_pp0_iter17_reg;
        icmp_ln28_reg_571_pp0_iter19_reg <= icmp_ln28_reg_571_pp0_iter18_reg;
        icmp_ln28_reg_571_pp0_iter1_reg <= icmp_ln28_reg_571;
        icmp_ln28_reg_571_pp0_iter20_reg <= icmp_ln28_reg_571_pp0_iter19_reg;
        icmp_ln28_reg_571_pp0_iter21_reg <= icmp_ln28_reg_571_pp0_iter20_reg;
        icmp_ln28_reg_571_pp0_iter2_reg <= icmp_ln28_reg_571_pp0_iter1_reg;
        icmp_ln28_reg_571_pp0_iter3_reg <= icmp_ln28_reg_571_pp0_iter2_reg;
        icmp_ln28_reg_571_pp0_iter4_reg <= icmp_ln28_reg_571_pp0_iter3_reg;
        icmp_ln28_reg_571_pp0_iter5_reg <= icmp_ln28_reg_571_pp0_iter4_reg;
        icmp_ln28_reg_571_pp0_iter6_reg <= icmp_ln28_reg_571_pp0_iter5_reg;
        icmp_ln28_reg_571_pp0_iter7_reg <= icmp_ln28_reg_571_pp0_iter6_reg;
        icmp_ln28_reg_571_pp0_iter8_reg <= icmp_ln28_reg_571_pp0_iter7_reg;
        icmp_ln28_reg_571_pp0_iter9_reg <= icmp_ln28_reg_571_pp0_iter8_reg;
        mul6_reg_736_pp0_iter10_reg <= mul6_reg_736_pp0_iter9_reg;
        mul6_reg_736_pp0_iter11_reg <= mul6_reg_736_pp0_iter10_reg;
        mul6_reg_736_pp0_iter3_reg <= mul6_reg_736;
        mul6_reg_736_pp0_iter4_reg <= mul6_reg_736_pp0_iter3_reg;
        mul6_reg_736_pp0_iter5_reg <= mul6_reg_736_pp0_iter4_reg;
        mul6_reg_736_pp0_iter6_reg <= mul6_reg_736_pp0_iter5_reg;
        mul6_reg_736_pp0_iter7_reg <= mul6_reg_736_pp0_iter6_reg;
        mul6_reg_736_pp0_iter8_reg <= mul6_reg_736_pp0_iter7_reg;
        mul6_reg_736_pp0_iter9_reg <= mul6_reg_736_pp0_iter8_reg;
        mul7_reg_741_pp0_iter10_reg <= mul7_reg_741_pp0_iter9_reg;
        mul7_reg_741_pp0_iter11_reg <= mul7_reg_741_pp0_iter10_reg;
        mul7_reg_741_pp0_iter12_reg <= mul7_reg_741_pp0_iter11_reg;
        mul7_reg_741_pp0_iter13_reg <= mul7_reg_741_pp0_iter12_reg;
        mul7_reg_741_pp0_iter14_reg <= mul7_reg_741_pp0_iter13_reg;
        mul7_reg_741_pp0_iter3_reg <= mul7_reg_741;
        mul7_reg_741_pp0_iter4_reg <= mul7_reg_741_pp0_iter3_reg;
        mul7_reg_741_pp0_iter5_reg <= mul7_reg_741_pp0_iter4_reg;
        mul7_reg_741_pp0_iter6_reg <= mul7_reg_741_pp0_iter5_reg;
        mul7_reg_741_pp0_iter7_reg <= mul7_reg_741_pp0_iter6_reg;
        mul7_reg_741_pp0_iter8_reg <= mul7_reg_741_pp0_iter7_reg;
        mul7_reg_741_pp0_iter9_reg <= mul7_reg_741_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln28_reg_571_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mul1_reg_731 <= grp_fu_286_p2;
        mul6_reg_736 <= grp_fu_292_p2;
        mul7_reg_741 <= grp_fu_296_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln28_reg_571_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        mul2_reg_746 <= grp_fu_286_p2;
        mul3_reg_751 <= grp_fu_292_p2;
        mul8_reg_756 <= grp_fu_296_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        mul3_reg_751_pp0_iter3_reg <= mul3_reg_751;
        mul3_reg_751_pp0_iter4_reg <= mul3_reg_751_pp0_iter3_reg;
        mul8_reg_756_pp0_iter10_reg <= mul8_reg_756_pp0_iter9_reg;
        mul8_reg_756_pp0_iter11_reg <= mul8_reg_756_pp0_iter10_reg;
        mul8_reg_756_pp0_iter12_reg <= mul8_reg_756_pp0_iter11_reg;
        mul8_reg_756_pp0_iter13_reg <= mul8_reg_756_pp0_iter12_reg;
        mul8_reg_756_pp0_iter14_reg <= mul8_reg_756_pp0_iter13_reg;
        mul8_reg_756_pp0_iter15_reg <= mul8_reg_756_pp0_iter14_reg;
        mul8_reg_756_pp0_iter16_reg <= mul8_reg_756_pp0_iter15_reg;
        mul8_reg_756_pp0_iter3_reg <= mul8_reg_756;
        mul8_reg_756_pp0_iter4_reg <= mul8_reg_756_pp0_iter3_reg;
        mul8_reg_756_pp0_iter5_reg <= mul8_reg_756_pp0_iter4_reg;
        mul8_reg_756_pp0_iter6_reg <= mul8_reg_756_pp0_iter5_reg;
        mul8_reg_756_pp0_iter7_reg <= mul8_reg_756_pp0_iter6_reg;
        mul8_reg_756_pp0_iter8_reg <= mul8_reg_756_pp0_iter7_reg;
        mul8_reg_756_pp0_iter9_reg <= mul8_reg_756_pp0_iter8_reg;
        zext_ln32_reg_621_pp0_iter10_reg[11 : 0] <= zext_ln32_reg_621_pp0_iter9_reg[11 : 0];
        zext_ln32_reg_621_pp0_iter11_reg[11 : 0] <= zext_ln32_reg_621_pp0_iter10_reg[11 : 0];
        zext_ln32_reg_621_pp0_iter12_reg[11 : 0] <= zext_ln32_reg_621_pp0_iter11_reg[11 : 0];
        zext_ln32_reg_621_pp0_iter13_reg[11 : 0] <= zext_ln32_reg_621_pp0_iter12_reg[11 : 0];
        zext_ln32_reg_621_pp0_iter14_reg[11 : 0] <= zext_ln32_reg_621_pp0_iter13_reg[11 : 0];
        zext_ln32_reg_621_pp0_iter15_reg[11 : 0] <= zext_ln32_reg_621_pp0_iter14_reg[11 : 0];
        zext_ln32_reg_621_pp0_iter16_reg[11 : 0] <= zext_ln32_reg_621_pp0_iter15_reg[11 : 0];
        zext_ln32_reg_621_pp0_iter17_reg[11 : 0] <= zext_ln32_reg_621_pp0_iter16_reg[11 : 0];
        zext_ln32_reg_621_pp0_iter18_reg[11 : 0] <= zext_ln32_reg_621_pp0_iter17_reg[11 : 0];
        zext_ln32_reg_621_pp0_iter19_reg[11 : 0] <= zext_ln32_reg_621_pp0_iter18_reg[11 : 0];
        zext_ln32_reg_621_pp0_iter1_reg[11 : 0] <= zext_ln32_reg_621[11 : 0];
        zext_ln32_reg_621_pp0_iter20_reg[11 : 0] <= zext_ln32_reg_621_pp0_iter19_reg[11 : 0];
        zext_ln32_reg_621_pp0_iter2_reg[11 : 0] <= zext_ln32_reg_621_pp0_iter1_reg[11 : 0];
        zext_ln32_reg_621_pp0_iter3_reg[11 : 0] <= zext_ln32_reg_621_pp0_iter2_reg[11 : 0];
        zext_ln32_reg_621_pp0_iter4_reg[11 : 0] <= zext_ln32_reg_621_pp0_iter3_reg[11 : 0];
        zext_ln32_reg_621_pp0_iter5_reg[11 : 0] <= zext_ln32_reg_621_pp0_iter4_reg[11 : 0];
        zext_ln32_reg_621_pp0_iter6_reg[11 : 0] <= zext_ln32_reg_621_pp0_iter5_reg[11 : 0];
        zext_ln32_reg_621_pp0_iter7_reg[11 : 0] <= zext_ln32_reg_621_pp0_iter6_reg[11 : 0];
        zext_ln32_reg_621_pp0_iter8_reg[11 : 0] <= zext_ln32_reg_621_pp0_iter7_reg[11 : 0];
        zext_ln32_reg_621_pp0_iter9_reg[11 : 0] <= zext_ln32_reg_621_pp0_iter8_reg[11 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln28_reg_571_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        mul4_reg_761 <= grp_fu_286_p2;
        mul5_reg_766 <= grp_fu_292_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        mul4_reg_761_pp0_iter3_reg <= mul4_reg_761;
        mul4_reg_761_pp0_iter4_reg <= mul4_reg_761_pp0_iter3_reg;
        mul4_reg_761_pp0_iter5_reg <= mul4_reg_761_pp0_iter4_reg;
        mul4_reg_761_pp0_iter6_reg <= mul4_reg_761_pp0_iter5_reg;
        mul5_reg_766_pp0_iter3_reg <= mul5_reg_766;
        mul5_reg_766_pp0_iter4_reg <= mul5_reg_766_pp0_iter3_reg;
        mul5_reg_766_pp0_iter5_reg <= mul5_reg_766_pp0_iter4_reg;
        mul5_reg_766_pp0_iter6_reg <= mul5_reg_766_pp0_iter5_reg;
        mul5_reg_766_pp0_iter7_reg <= mul5_reg_766_pp0_iter6_reg;
        mul5_reg_766_pp0_iter8_reg <= mul5_reg_766_pp0_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln28_fu_312_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        select_ln28_1_reg_595 <= select_ln28_1_fu_338_p3;
    end
end

always @ (*) begin
    if ((icmp_ln28_fu_312_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state13 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state13 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state78) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln28_reg_571 == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_245_p4 = add_ln28_reg_566;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_245_p4 = indvar_flatten_reg_241;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln28_reg_571 == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_x_phi_fu_267_p4 = x_1_reg_696;
    end else begin
        ap_phi_mux_x_phi_fu_267_p4 = x_reg_263;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln28_reg_571 == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_y_phi_fu_256_p4 = select_ln28_1_reg_595;
    end else begin
        ap_phi_mux_y_phi_fu_256_p4 = y_reg_252;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state78)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        bottom_buf_ce0 = 1'b1;
    end else begin
        bottom_buf_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        center_buf_address0 = zext_ln41_3_fu_501_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        center_buf_address0 = zext_ln41_2_fu_484_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        center_buf_address0 = zext_ln32_fu_404_p1;
    end else begin
        center_buf_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        center_buf_address1 = zext_ln41_1_fu_497_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        center_buf_address1 = zext_ln41_fu_488_p1;
    end else begin
        center_buf_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        center_buf_ce0 = 1'b1;
    end else begin
        center_buf_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        center_buf_ce1 = 1'b1;
    end else begin
        center_buf_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_274_p0 = add1_reg_776;
    end else if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_274_p0 = add_reg_771;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_274_p0 = mul1_reg_731;
    end else begin
        grp_fu_274_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_274_p1 = mul4_reg_761_pp0_iter6_reg;
    end else if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_274_p1 = mul3_reg_751_pp0_iter4_reg;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_274_p1 = mul2_reg_746;
    end else begin
        grp_fu_274_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_278_p0 = add4_reg_791;
    end else if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_278_p0 = add3_reg_786;
    end else if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_278_p0 = add2_reg_781;
    end else begin
        grp_fu_278_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_278_p1 = mul7_reg_741_pp0_iter14_reg;
    end else if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_278_p1 = mul6_reg_736_pp0_iter11_reg;
    end else if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_278_p1 = mul5_reg_766_pp0_iter8_reg;
    end else begin
        grp_fu_278_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_282_p0 = add6_reg_801;
    end else if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_282_p0 = add5_reg_796;
    end else begin
        grp_fu_282_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_282_p1 = mul_reg_561;
    end else if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_282_p1 = mul8_reg_756_pp0_iter16_reg;
    end else begin
        grp_fu_282_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_286_p0 = center_buf_load_3_reg_721;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_286_p0 = center_buf_load_1_reg_701;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_286_p0 = center_buf_load_reg_666;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_286_p0 = ct;
    end else begin
        grp_fu_286_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_286_p1 = ce_r;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_286_p1 = cn;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_286_p1 = cc;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_286_p1 = amb_temp;
    end else begin
        grp_fu_286_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
            grp_fu_292_p0 = center_buf_load_4_reg_726;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_292_p0 = center_buf_load_2_reg_706;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_292_p0 = top_buf_load_reg_681;
        end else begin
            grp_fu_292_p0 = 'bx;
        end
    end else begin
        grp_fu_292_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
            grp_fu_292_p1 = cw;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_292_p1 = cs;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_292_p1 = ct;
        end else begin
            grp_fu_292_p1 = 'bx;
        end
    end else begin
        grp_fu_292_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_296_p0 = div_reg_556;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_296_p0 = bottom_buf_load_reg_686;
        end else begin
            grp_fu_296_p0 = 'bx;
        end
    end else begin
        grp_fu_296_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_296_p1 = power_buf_load_reg_691;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_296_p1 = cb;
        end else begin
            grp_fu_296_p1 = 'bx;
        end
    end else begin
        grp_fu_296_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        power_buf_ce0 = 1'b1;
    end else begin
        power_buf_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        result_buf_ce0 = 1'b1;
    end else begin
        result_buf_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln28_reg_571_pp0_iter21_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        result_buf_we0 = 1'b1;
    end else begin
        result_buf_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        top_buf_ce0 = 1'b1;
    end else begin
        top_buf_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln28_fu_312_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln28_fu_312_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state78;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((~((ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone)) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else if (((ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state78;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln28_1_fu_332_p2 = (ap_phi_mux_y_phi_fu_256_p4 + 7'd1);

assign add_ln28_fu_306_p2 = (ap_phi_mux_indvar_flatten_phi_fu_245_p4 + 13'd1);

assign add_ln34_1_fu_423_p3 = {{trunc_ln28_reg_600}, {trunc_ln32_reg_616}};

assign add_ln34_fu_417_p2 = ($signed(c_fu_398_p2) + $signed(12'd4095));

assign add_ln35_fu_442_p2 = (c_fu_398_p2 + 12'd1);

assign add_ln36_fu_456_p2 = ($signed(c_fu_398_p2) + $signed(12'd4032));

assign add_ln37_fu_470_p2 = (c_fu_398_p2 + 12'd64);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage2_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage2_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage2_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage1_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage2_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage1_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage2_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage1_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage2_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage1_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage2_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage1_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage2_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage1_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage2_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage1_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage2_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp0_stage1_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage2_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp0_stage1_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp0_stage2_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp0_stage1_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp0_stage2_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp0_stage1_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp0_stage2_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp0_stage1_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state72_pp0_stage2_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state73_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state74_pp0_stage1_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state75_pp0_stage2_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state76_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state77_pp0_stage1_iter21 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign bottom_buf_address0 = zext_ln32_fu_404_p1;

assign c_fu_398_p2 = (x_01_cast_fu_395_p1 + p_mid2_fu_366_p3);

assign cmp66_fu_350_p2 = ((ap_phi_mux_y_phi_fu_256_p4 == 7'd0) ? 1'b1 : 1'b0);

assign cmp6_mid1_fu_373_p2 = ((add_ln28_1_reg_589 == 7'd0) ? 1'b1 : 1'b0);

assign cmp95_fu_356_p2 = ((ap_phi_mux_y_phi_fu_256_p4 == 7'd63) ? 1'b1 : 1'b0);

assign cmp9_mid1_fu_384_p2 = ((add_ln28_1_reg_589 == 7'd63) ? 1'b1 : 1'b0);

assign e_fu_448_p3 = ((icmp_ln35_fu_437_p2[0:0] == 1'b1) ? add_ln34_1_fu_423_p3 : add_ln35_fu_442_p2);

assign icmp_ln28_fu_312_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_245_p4 == 13'd4096) ? 1'b1 : 1'b0);

assign icmp_ln29_fu_318_p2 = ((ap_phi_mux_x_phi_fu_267_p4 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln34_fu_412_p2 = ((select_ln28_reg_581 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln35_fu_437_p2 = ((select_ln28_reg_581 == 7'd63) ? 1'b1 : 1'b0);

assign n_fu_462_p3 = ((select_ln28_2_fu_378_p3[0:0] == 1'b1) ? add_ln34_1_fu_423_p3 : add_ln36_fu_456_p2);

assign p_mid2_fu_366_p3 = {{trunc_ln28_reg_600}, {6'd0}};

assign power_buf_address0 = zext_ln32_fu_404_p1;

assign result_buf_address0 = zext_ln32_reg_621_pp0_iter20_reg;

assign result_buf_d0 = add7_reg_806;

assign s_fu_476_p3 = ((select_ln28_3_fu_389_p3[0:0] == 1'b1) ? add_ln34_1_fu_423_p3 : add_ln37_fu_470_p2);

assign select_ln28_1_fu_338_p3 = ((icmp_ln29_fu_318_p2[0:0] == 1'b1) ? add_ln28_1_fu_332_p2 : ap_phi_mux_y_phi_fu_256_p4);

assign select_ln28_2_fu_378_p3 = ((icmp_ln29_reg_575[0:0] == 1'b1) ? cmp6_mid1_fu_373_p2 : cmp66_reg_606);

assign select_ln28_3_fu_389_p3 = ((icmp_ln29_reg_575[0:0] == 1'b1) ? cmp9_mid1_fu_384_p2 : cmp95_reg_611);

assign select_ln28_fu_324_p3 = ((icmp_ln29_fu_318_p2[0:0] == 1'b1) ? 7'd0 : ap_phi_mux_x_phi_fu_267_p4);

assign top_buf_address0 = zext_ln32_fu_404_p1;

assign trunc_ln28_fu_346_p1 = select_ln28_1_fu_338_p3[5:0];

assign trunc_ln32_fu_362_p1 = select_ln28_fu_324_p3[5:0];

assign w_fu_429_p3 = ((icmp_ln34_fu_412_p2[0:0] == 1'b1) ? add_ln34_1_fu_423_p3 : add_ln34_fu_417_p2);

assign x_01_cast_fu_395_p1 = select_ln28_reg_581;

assign x_1_fu_492_p2 = (select_ln28_reg_581 + 7'd1);

assign zext_ln32_fu_404_p1 = c_fu_398_p2;

assign zext_ln41_1_fu_497_p1 = e_reg_631;

assign zext_ln41_2_fu_484_p1 = n_reg_636;

assign zext_ln41_3_fu_501_p1 = w_reg_626;

assign zext_ln41_fu_488_p1 = s_reg_641;

always @ (posedge ap_clk) begin
    zext_ln32_reg_621[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln32_reg_621_pp0_iter1_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln32_reg_621_pp0_iter2_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln32_reg_621_pp0_iter3_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln32_reg_621_pp0_iter4_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln32_reg_621_pp0_iter5_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln32_reg_621_pp0_iter6_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln32_reg_621_pp0_iter7_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln32_reg_621_pp0_iter8_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln32_reg_621_pp0_iter9_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln32_reg_621_pp0_iter10_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln32_reg_621_pp0_iter11_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln32_reg_621_pp0_iter12_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln32_reg_621_pp0_iter13_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln32_reg_621_pp0_iter14_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln32_reg_621_pp0_iter15_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln32_reg_621_pp0_iter16_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln32_reg_621_pp0_iter17_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln32_reg_621_pp0_iter18_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln32_reg_621_pp0_iter19_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln32_reg_621_pp0_iter20_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
end

endmodule //hotspot_HW_compute
